(((use io) (use conv))
 ((toLower ((c int)) (int)
   (if (& (>= c 'A') (<= c 'Z')) ((return (+ (- c 'A') 'a')))) (return c))
  (makeInverse ((base ([] int)) (inv ([] int))) () (= (c int) 0)
   (while (< c 26) ((= ([] inv ([] base c)) c) (= c (+ c 1)))))
  (mkMatrix ((n int)) (([] ([] int))) (a ([] ([] int))) (return a))
  (makeRotor ((sig ([] int))) (([] ([] int)) ([] ([] int)) int)
   (= (forward ([] ([] int))) (mkMatrix 26))
   (= (backward ([] ([] int))) (mkMatrix 26)) (base ([] int)) (= (c int) 0)
   (while (< c 26)
    ((= (cd int) (- (toLower ([] sig c)) 'a')) (= ([] base c) cd)
     (= c (+ c 1))))
   (inv ([] int)) (= (rot int) 0)
   (while (< rot 26)
    ((= c 0)
     (while (< c 26) ((= ([] ([] forward rot) c) ([] base c)) (= c (+ c 1))))
     (makeInverse base inv) (= c 0)
     (while (< c 26) ((= ([] ([] backward rot) c) ([] inv c)) (= c (+ c 1))))
     (= (first int) (% (+ (- ([] base 0) 1) 26) 26)) (= (pos int) 1)
     (while (< pos 26)
      ((= ([] base (- pos 1)) (% (+ (- ([] base pos) 1) 26) 26))
       (= pos (+ pos 1))))
     (= ([] base 25) first) (= rot (+ rot 1))))
   (return forward backward 0))
  (rotorEncryptForward
   ((forward ([] ([] int))) (backward ([] ([] int))) (pos int) (letter int))
   (int) (return ([] ([] forward pos) letter)))
  (rotorEncryptBack
   ((forward ([] ([] int))) (backward ([] ([] int))) (pos int) (letter int))
   (int) (return ([] ([] backward pos) letter)))
  (makeReflector ((encoding ([] int))) (([] int)) (perm ([] int))
   (= (c int) 0)
   (while (< c 26)
    ((= (cd int) (- (toLower ([] encoding c)) 'a')) (= ([] perm c) cd)
     (= c (+ c 1))))
   (return perm))
  (reflectorEncrypt ((perm ([] int)) (l int)) (int) (return ([] perm l)))
  (main ((a ([] ([] int)))) ()
   (= (loops ([] ([] int)))
    ((12 27 6 57 25 51 52 (- 1)) (12 27 6 55 25 51 52 (- 1)) (12 46 47 (- 1))
     (12 27 6 16 11 52 (- 1))))
   (= ((r1f ([] ([] int))) (r1b ([] ([] int))) (r1p int))
    (makeRotor "\"EKMFLGDQVZNTOWYHXUSPAIBRCJ\""))
   (= ((r2f ([] ([] int))) (r2b ([] ([] int))) (r2p int))
    (makeRotor "\"AJDKSIRUXBLHWTMCQGZNPYFVOE\""))
   (= ((r3f ([] ([] int))) (r3b ([] ([] int))) (r3p int))
    (makeRotor "\"BDFHJLCPRTXVZNYEIWGAKMUSQO\""))
   (= (mb ([] int)) (makeReflector "\"YRUHQSLDPXNGOKMIEBFZCWVJAT\""))
   (= (pos int) 0)
   (while (< pos (* (* 26 26) 26))
    ((= (guess int) 0)
     (while (< guess 26)
      ((= (allMatch bool) true) (= (loop int) 0)
       (while (< loop (length loops))
        ((= (l int) guess) (= (loopPos int) 0)
         (while (!= ([] ([] loops loop) loopPos) (- 1))
          ((= (epos int) (+ pos ([] ([] loops loop) loopPos)))
           (= r1p (% epos 26)) (= r2p (% (/ epos 26) 26))
           (= r3p (% (/ epos (* 26 26)) 26))
           (= l (rotorEncryptForward r1f r1b r1p l))
           (= l (rotorEncryptForward r2f r2b r2p l))
           (= l (rotorEncryptForward r3f r3b r3p l))
           (= l (reflectorEncrypt mb l))
           (= l (rotorEncryptBack r3f r3b r3p l))
           (= l (rotorEncryptBack r2f r2b r2p l))
           (= l (rotorEncryptBack r1f r1b r1p l)) (= loopPos (+ loopPos 1))))
         (if (!= l guess) (= allMatch false)) (= loop (+ loop 1))))
       (if allMatch
        ((posStr ([] int)) (= ([] posStr 0) (+ (% pos 26) 'A'))
         (= ([] posStr 1) (+ (% (/ pos 26) 26) 'A'))
         (= ([] posStr 2) (+ (% (/ pos (* 26 26)) 26) 'A'))
         (print "\"MATCH At rotor pos:\"") (print posStr)
         (print "\" first comes in from:\"") (guessStr ([] int))
         (= ([] guessStr 0) (+ guess 'A')) (println guessStr)))
       (= guess (+ guess 1))))
     (= pos (+ pos 1)))))))