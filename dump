.intel_syntax noprefix
.data
g0: .quad 1, 53
.globl _Imain_paai
.text
_Imain_paai:
	enter 136, 0
	
	mov r8, rdi ; ptr to args
	mov qword ptr [rbp + -8], r8 ; store ptr to args at -8
	
	mov r9, qword ptr [rbp + -8] ; load ptr to args in r9
	mov r8, r9 ; move ptr to args to r8
	mov qword ptr [rbp + -16], r8 ; move ptr to args to -16
	
	mov r9, qword ptr [rbp + -16] ; load ptr to args ti r9
	mov r8, r9 ; move ptr to args to r8
	mov qword ptr [rbp + -24], r8 ; move ptr to args to -24
	
	mov r8, qword ptr [rbp + -32] ; move garbage into r8
	lea r8, qword ptr g0[rip] ; move address of g0 into r8
	mov qword ptr [rbp + -32], r8 ; move addr of g0 into -32
	
	mov r9, qword ptr [rbp + -32] ; move addr of g0 into r9
	mov r8, r9 ; move addr of g0 into r8
	mov qword ptr [rbp + -40], r8 ; move addr of g0 into -40
	
	mov r8, 8 ; move 8 into 8
	mov qword ptr [rbp + -48], r8 ; move 8 to -48

	mov r8, qword ptr [rbp + -56] ; move garbage into r8
	mov r9, qword ptr [rbp + -40] ; move addr of g0 into r9
	mov r10, qword ptr [rbp + -48] ; move 8 into r10
	lea r8, qword ptr [r9 + r10] ; r8 <- &g0 + 8
	mov qword ptr [rbp + -56], r8 ; [-56] <- &g0 + 8
	
	mov r9, qword ptr [rbp + -56] ; r9 <- &g0 + 8
	mov r8, r9 ; r8 <- &g0 + 8
	mov qword ptr [rbp + -64], r8 ; [-64] <- &g0 + 8
	
	mov r9, qword ptr [rbp + -64] ; r9 <- &g0 + 8
	mov r8, r9 ; r8 <- &g0 + 8
	mov qword ptr [rbp + -72], r8 ; [-72] <- &g0 + 8
	
	mov r8, 0 ; r8 <- 0
	mov qword ptr [rbp + -80], r8 ; [-80] <- 0
	
	mov r9, qword ptr [rbp + -80] ; r9 <- 0
	mov r8, r9 ; r8 <- 0
	mov qword ptr [rbp + -88], r8 ; [-88] <- 0
	
	mov r8, 8 ; r8 <- 8
	mov qword ptr [rbp + -96], r8 ; [-96] <- 8
	
	mov r8, qword ptr [rbp + -72] ; r8 <- &g0 + 8
	mov r9, qword ptr [rbp + -96] ; r9 <- 8
	sub r8, r9 ; r8 <- &g0
	mov qword ptr [rbp + -72], r8 ; [-72] <- &g0
	
	mov r9, qword ptr [rbp + -72] ; r9 <- &g0
	mov r8, qword ptr [r9] ; r8 <- 1
	mov qword ptr [rbp + -72], r8 ; [-72] <- 1
	
	mov r8, qword ptr [rbp + -88] ; 0
	mov r9, qword ptr [rbp + -72] ; 1
	cmp r8, r9 ; 0 < 1
	setb r8b ; r8b <- 0
	movzx r8, r8b ; r8 <- 0
	mov qword ptr [rbp + -104], r8 ; [-104] <- 0
	
	mov r8, 1 ; r8 <- 1
	mov qword ptr [rbp + -112], r8 ; [-112] <- 1
	
	mov r8, qword ptr [rbp + -104] ; r8 <- 0
	mov r9, qword ptr [rbp + -112] ; r9 <- 1
	xor r8, r9 ; r8 <- 1
	mov qword ptr [rbp + -104], r8 ; [-104] <- 1
	
	mov r8, qword ptr [rbp + -104] ; r8 <- 1
	mov r9, qword ptr [rbp + -104] ; r9 <- 1
	test r8, r9 ; 1 & 1

	jnz l0 ; jump to l0
	
	l1:
	
	mov r8, 8 ; r8 <- 8
	mov qword ptr [rbp + -120], r8 ; [-120] <- 8
	
	mov r8, qword ptr [rbp + -88] ; r8 <- 0
	mov r9, qword ptr [rbp + -120] ; r9 <- 8
	imul r8, r9 ; r8 <- 0
	mov qword ptr [rbp + -88], r8 ; [-88] <- 0

	mov r9, qword ptr [rbp + -72] ; r9 <- 1
	mov r10, qword ptr [rbp + -88] ; r10 <- 0
	lea r8, qword ptr [r9 + r10] ; r8 <- 1
	mov qword ptr [rbp + -128], r8 ; [-128] <- 1

	mov r9, qword ptr [rbp + -128] ; r9 <- 1
	mov r8, qword ptr [r9] ; segfault
	mov qword ptr [rbp + -128], r8 ; [-128] <- segfault
	
	mov r9, qword ptr [rbp + -128] ; r9 <- segfault
	mov r8, r9 ; r8 <- segfault
	mov qword ptr [rbp + -136], r8 ; [-136] <- segfault
	
	leave
	ret
	
	l0:
	
	and rsp, -16
	call _xi_out_of_bounds
	jmp l1
